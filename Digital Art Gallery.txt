import React from 'react';
import { Heart, Share2, Info, Download, Trash2 } from 'lucide-react';
import type { Artwork } from '../types';
interface ArtworkCardProps {
artwork: Artwork;
onDelete?: (id: string) => void;
onLike?: (id: string) => void;
}
export function ArtworkCard({ artwork, onDelete, onLike }: ArtworkCardProps) {const handleDownload = async () => {
try {
const response = await fetch(artwork.imageUrl);
const blob = await response.blob();
const url = window.URL.createObjectURL(blob);
const a = document.createElement('a');
a.href = url;
a.download = `${artwork.title}.png`;
document.body.appendChild(a);
a.click();
window.URL.revokeObjectURL(url);
document.body.removeChild(a);
} catch (error) {
console.error('Error downloading image:', error);
}
};
const handleShare = async () => {
try {
if (navigator.share) {
await navigator.share({
title: artwork.title, text: artwork.description, url: artwork.imageUrl, });
} else {
await navigator.clipboard.writeText(artwork.imageUrl);
alert('Image URL copied to clipboard!');
}
} catch (error) {
console.error('Error sharing:', error);
}
};
return (
<div className="bg-white rounded-lg shadow-lg overflow-hidden transition-transformhover:scale-[1.02]">
<img
src={artwork.imageUrl}
alt={artwork.title}
className="w-full h-64 object-cover"
/>
<div className="p-4">
<h3 className="text-xl font-semibold mb-2">{artwork.title}</h3>
<p className="text-gray-600 text-sm mb-4">{artwork.description}</p>
<div className="flex items-center justify-between">
<div className="flex items-center gap-2">
<span className="text-sm text-gray-500">By {artwork.artist}</span>
{artwork.likes !== undefined && (
<span className="text-sm text-gray-500">â€¢ {artwork.likes} likes</span>)}
</div>
<div className="flex gap-2">
{onLike && (
<button
onClick={() => onLike(artwork.id)}
className={`p-2 hover:bg-gray-100 rounded-full ${
artwork.isLiked ? 'text-red-500' : 'text-gray-500' }`}
>
<Heart className="w-5 h-5" fill={artwork.isLiked ? 'currentColor' : 'none'} /></button>
)}
<button
onClick={handleShare}
className="p-2 hover:bg-gray-100 rounded-full text-indigo-600" >
<Share2 className="w-5 h-5" />
</button>
<button
onClick={handleDownload}
className="p-2 hover:bg-gray-100 rounded-full text-indigo-600" >
<Download className="w-5 h-5" />
</button>
{onDelete && (
<button
onClick={() => onDelete(artwork.id)}
className="p-2 hover:bg-gray-100 rounded-full text-red-500" >
<Trash2 className="w-5 h-5" />
</button>
)}
</div>
</div>
</div>
</div>
);
}